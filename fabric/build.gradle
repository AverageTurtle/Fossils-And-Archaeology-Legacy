plugins {
	id 'java'
	id 'idea'
	id 'fabric-loom' version '1.5-SNAPSHOT'
	id 'maven-publish'
}

base {
	archivesName = "${mod_id}-fabric"
}

loom {
	accessWidenerPath = file("src/main/resources/fossilslegacy.accesswidener")
	
	runs {
		datagen {
			inherit client
			name "Data Generation"
			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
			vmArg "-Dfabric-api.datagen.modid=${mod_id}"
			vmArg "-Dporting_lib.datagen.existing_resources=${file("src/main/resources")}"
 
			runDir "build/datagen"
		}
	}
}

sourceSets {
	main {
		resources {
			srcDirs += [
					'src/main/generated'
			]
		}
	}
} 

dependencies {
	minecraft "com.mojang:minecraft:${minecraft_version}"
	mappings loom.officialMojangMappings()

	modImplementation "net.fabricmc:fabric-loader:${fabric_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${api_version}"

	modApi include("simplelibrary:simplelibrary-fabric:3.0.0-beta12")
	
	modImplementation(include("io.github.fabricators_of_create.Porting-Lib:data:${project.porting_lib_version}"))
	modImplementation(include("io.github.fabricators_of_create.Porting-Lib:model_generators:${project.porting_lib_version}"))
	modImplementation(include("io.github.fabricators_of_create.Porting-Lib:utility:${project.porting_lib_version}"))
	modImplementation(include("io.github.fabricators_of_create.Porting-Lib:model_materials:${project.porting_lib_version}"))
	modImplementation(include("io.github.fabricators_of_create.Porting-Lib:tags:${project.porting_lib_version}"))
	
	api "fuzs.forgeconfigapiport:forgeconfigapiport-common-neoforgeapi:${project.forge_config_api_version}"
	api "fuzs.forgeconfigapiport:forgeconfigapiport-common-forgeapi:${project.forge_config_api_version}"
	modApi "fuzs.forgeconfigapiport:forgeconfigapiport-fabric:${project.forge_config_api_version}"

	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	
	modImplementation "com.terraformersmc:modmenu:${project.mod_menu_version}"

	modCompileOnlyApi("mezz.jei:jei-${project.minecraft_version}-common-api:${project.jei_version}")
	modCompileOnlyApi("mezz.jei:jei-${project.minecraft_version}-fabric-api:${project.jei_version}")
	modRuntimeOnly("mezz.jei:jei-${project.minecraft_version}-fabric:${project.jei_version}")
	
	compileOnly project(":common")
}

loom {
	accessWidenerPath = file("src/main/resources/${mod_id}-fabric.accesswidener")
	mixin {
		defaultRefmapName.set("${mod_id}.refmap.json")
	}
	runs {
		client {
			client()
			setConfigName("Fabric Client")
			ideConfigGenerated(true)
			runDir("run")
		}
		server {
			server()
			setConfigName("Fabric Server")
			ideConfigGenerated(true)
			runDir("run")
		}
	}
}

tasks.withType(JavaCompile).configureEach {
	source(project(":common").sourceSets.main.allSource)
}

processResources {
	from project(":common").sourceSets.main.resources
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifactId base.archivesName.get()
			from components.java
		}
	}
	repositories {
		maven {
			url "file://" + System.getenv("local_maven")
		}
	}
}